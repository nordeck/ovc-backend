<databaseChangeLog
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
                            https://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-4.15.xsd">
    
    <changeSet author="wagner.wutzke" id="1700574778688-1" dbms="postgresql">
        <createSequence sequenceName="conference_mapper_id_seq" startValue="1"/>

        <!--
            Source: https://wiki.postgresql.org/wiki/Pseudo_encrypt_constrained_to_an_arbitrary_range

            Pseudo encrypt function created on top of the Feistel Network algorithm
        -->
        <sql splitStatements="false">
            <![CDATA[
            CREATE OR REPLACE FUNCTION pseudo_encrypt(VALUE bigint) returns bigint AS $$
            DECLARE
            l1 int;
                l2 int;
                r1 int;
                r2 int;
                i int:=0;
            BEGIN
                l1:= (VALUE >> 16) & (65535);
                r1:= VALUE & (65535);
                WHILE i < 3 LOOP
                    l2 := r1;
                    r2 := l1 # ((((1366 * r1 + 150889) % 714025) / 714025.0) * (32767))::int;
                    l1 := l2;
                    r1 := r2;
                    i := i + 1;
                END LOOP;
                RETURN ((l1 << 16) + r1);
            END;
            $$ LANGUAGE plpgsql strict immutable;
            ]]>
        </sql>

        <sql splitStatements="false">
            <![CDATA[
            CREATE OR REPLACE FUNCTION bounded_pseudo_encrypt(VALUE bigint, MAX bigint) returns int AS $$
            BEGIN
                LOOP
                    VALUE := pseudo_encrypt(VALUE);
                    EXIT WHEN VALUE <= MAX;
                END LOOP;
                RETURN VALUE;
            END
            $$ LANGUAGE plpgsql strict immutable;
            ]]>
        </sql>

    </changeSet>

</databaseChangeLog>